# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-08-29 16:52
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.contrib.wagtailroutablepage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0029_unicode_slugfield_dj19'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(max_length=63, null=True)),
                ('company', models.CharField(max_length=63, null=True)),
                ('role', models.IntegerField(choices=[(1, 'HW'), (2, 'Process')], default=1)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('name', models.CharField(max_length=63, verbose_name='title')),
                ('description', models.TextField(blank=True, max_length=510, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
            ],
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Fab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='FacilityStatusPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='HWToolResponsibles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.DashboardUser')),
            ],
        ),
        migrations.CreateModel(
            name='Priority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=28)),
                ('priority', models.PositiveIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='ProcessToolResponsibles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('responsible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.DashboardUser')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=90)),
                ('description', models.CharField(max_length=510)),
                ('start_datetime', models.DateTimeField(blank=True, null=True)),
                ('due_datetime', models.DateTimeField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('priority', models.IntegerField(choices=[(0, 'None'), (1, 'HIGH'), (2, 'MEDIUM'), (3, 'LOW')], default=0, null=True)),
                ('status', models.IntegerField(choices=[(0, 'To Do'), (1, 'In Progress'), (2, 'Done')], default=0)),
                ('event', modelcluster.fields.ParentalKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='home.EventPage')),
            ],
        ),
        migrations.CreateModel(
            name='ToolModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('is_main', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ToolPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('name', models.CharField(max_length=63, unique=True)),
                ('tool_number', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.wagtailroutablepage.models.RoutablePageMixin, 'wagtailcore.page'),
        ),
        migrations.CreateModel(
            name='ToolUtilityStatusValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Utility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=31)),
                ('description', models.TextField()),
                ('fab', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='facilities', to='home.Fab')),
            ],
            options={
                'verbose_name_plural': 'utilities',
            },
        ),
        migrations.CreateModel(
            name='UtilityStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=63)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'utility status',
            },
        ),
        migrations.AddField(
            model_name='utility',
            name='status',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.UtilityStatus'),
        ),
        migrations.AddField(
            model_name='toolutilitystatusvalue',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tools', to='home.UtilityStatus'),
        ),
        migrations.AddField(
            model_name='toolutilitystatusvalue',
            name='tool',
            field=modelcluster.fields.ParentalKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='utilities', to='home.ToolPage'),
        ),
        migrations.AddField(
            model_name='toolmodule',
            name='tool',
            field=modelcluster.fields.ParentalKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='home.ToolPage'),
        ),
        migrations.AddField(
            model_name='task',
            name='module',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='home.ToolModule'),
        ),
        migrations.AddField(
            model_name='task',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='processtoolresponsibles',
            name='tool',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='process_responsibles', to='home.ToolPage'),
        ),
        migrations.AddField(
            model_name='hwtoolresponsibles',
            name='tool',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='hw_responsibles', to='home.ToolPage'),
        ),
        migrations.AddField(
            model_name='eventpage',
            name='module',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to='home.ToolModule'),
        ),
        migrations.AddField(
            model_name='eventpage',
            name='responsible',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='events', to=settings.AUTH_USER_MODEL),
        ),
    ]
